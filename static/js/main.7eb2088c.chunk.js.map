{"version":3,"sources":["components/Feedback/FeedbackItem.js","components/Feedback/FeedbackOptioconst.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.scss"],"names":["FeedbackItem","option","onLeaveFeedback","onClick","FeedbackOptions","options","map","nanoid","Statistics","good","neutral","bad","total","positivePercentage","toFixed","Section","children","title","className","s","Notification","message","App","state","updateIncrement","feedbackOptionst","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentag","totalValue","this","positivePercentageCount","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAiBeA,EAdM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBAC9B,OACE,6BACE,wBAAQC,QAAS,kBAAMD,EAAgBD,IAAvC,SACGA,O,QCgBMG,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASH,EAAsB,EAAtBA,gBAClC,OACE,6BACGG,EAAQC,KAAI,SAAAL,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,EACRC,gBAAiBA,GAFZK,qBCSAC,EAjBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OAEf,+BACI,6BAAI,0CAAaJ,OACjB,6BAAI,6CAAgBC,OACpB,6BAAI,yCAAYC,OAChB,6BAAI,0CAAaC,OACjB,6BAAI,uDAA0BC,EAAmBC,UAA7C,a,gBCUGC,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,yBAASC,UAAWC,IAAEJ,QAAtB,SACE,gCACE,6BAAKE,IACJD,QCCMI,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEPC,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAKPa,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAmBE,EAAUF,GAAoB,O,EAKvDG,mBAAmB,WAEjB,OADa,EAAKL,MAAMd,KAAK,EAAKc,MAAMb,QAAQ,EAAKa,MAAMZ,K,EAI5DkB,+BAA+B,SAAAjB,GAE5B,OAD2B,EAAKW,MAAMd,KAAKG,EAAO,K,4CAKpD,WACC,IAAMkB,EAAaC,KAAKH,qBAClBI,EAA0BD,KAAKF,+BAA+BC,GACtE,OACF,qCACC,cAAC,EAAD,CAASb,MAAM,wBAAf,SACG,cAAC,EAAD,CACAZ,QAAS,CAAC,OAAQ,UAAW,OAC7BH,gBAAiB6B,KAAKP,oBAIxB,cAAC,EAAD,CAASP,MAAM,aAAf,SACEa,EAGA,cAAC,EAAD,CACErB,KAAOsB,KAAKR,MAAMd,KAClBC,QAAUqB,KAAKR,MAAMb,QACrBC,IAAMoB,KAAKR,MAAMZ,IACjBC,MAAOkB,EACPjB,mBAAoBmB,IAPd,cAAC,EAAD,CAAcX,QAAQ,kC,GAzChBY,IAAMC,WA4DTZ,IC3Dfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.7eb2088c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n\r\nconst FeedbackItem = ({ option, onLeaveFeedback }) => {\r\n  return (\r\n    <li>\r\n      <button onClick={() => onLeaveFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nFeedbackItem.propTypes = {\r\n  option: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FeedbackItem from './FeedbackItem';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul >\r\n      {options.map(option => (\r\n        <FeedbackItem\r\n          key={nanoid()}\r\n          option={option}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) =>\r\n (\r\n    <ul>\r\n        <li><span>Good: {good}</span></li>\r\n        <li><span>Neutral: {neutral}</span></li>\r\n        <li><span>Bad: {bad}</span></li>\r\n        <li><span>Total:{total}</span></li>\r\n        <li><span>Positive feedback: {positivePercentage.toFixed()}%</span></li>\r\n      </ul>\r\n )\r\n Statistics.propTypes = {\r\n   good: PropTypes.number.isRequired,\r\n   neutral: PropTypes.number.isRequired,\r\n   bad: PropTypes.number.isRequired,\r\n   total: PropTypes.number.isRequired,\r\n   positivePercentage: PropTypes.number.isRequired,\r\n };\r\nexport default Statistics; ","import PropTypes from 'prop-types';\r\nimport s from './Section.module.scss'\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section className={s.Section}>\r\n      <div >\r\n        <h1>{title}</h1>\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;","import React from \"react\"; \r\nimport FeedbackOptions  from './components/Feedback/FeedbackOptioconst';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Section from './components/Section/Section';\r\nimport Notification from \"./components/Notification/Notification\";\r\nclass App extends React.Component   {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n\r\n\r\n  updateIncrement = feedbackOptionst => {\r\n    this.setState(prevState => ({\r\n      [feedbackOptionst]: prevState[feedbackOptionst] + 1,\r\n    }));\r\n  };\r\n//  \r\n\r\n countTotalFeedback=()=>{\r\n  const total = this.state.good+this.state.neutral+this.state.bad\r\n   return total};\r\n\r\n \r\n  countPositiveFeedbackPercentag=total=>{\r\n    const positivePercentage = (this.state.good/total)*100\r\n     return positivePercentage};\r\n  \r\n \r\n\r\n   render(){\r\n    const totalValue = this.countTotalFeedback()\r\n    const positivePercentageCount = this.countPositiveFeedbackPercentag(totalValue)\r\n  return (\r\n<>\r\n <Section title=\"Please leave feedback\">\r\n    <FeedbackOptions \r\n    options={['good', 'neutral', 'bad']}\r\n    onLeaveFeedback={this.updateIncrement} \r\n    />\r\n  </Section>\r\n\r\n  <Section title=\"Statistics\"> \r\n  {!totalValue ? (\r\n            <Notification message=\"There is no feedback\" />\r\n          ) : (\r\n    <Statistics \r\n      good ={this.state.good}\r\n      neutral ={this.state.neutral}\r\n      bad ={this.state.bad}\r\n      total={totalValue} \r\n      positivePercentage={positivePercentageCount}\r\n      />)}\r\n  </Section>\r\n</>\r\n \r\n\r\n\r\n   \r\n  );\r\n}\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1dyWA\"};"],"sourceRoot":""}